name: Preview + E2E (Midnight - runner preview)

on:
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  preview-and-e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install root deps (pnpm workspace)
        run: pnpm install --frozen-lockfile

      - name: Build web (Next.js) in production
        working-directory: web
        run: |
          pnpm --filter web build

      - name: Build issuer (Fastify/TS)
        working-directory: issuer
        run: |
          pnpm --filter issuer build || echo "issuer build step finished (script may be no-op)"

      - name: Start web (background)
        working-directory: web
        env:
          NODE_ENV: production
          PORT: 3000
        run: |
          # Start Next.js production server in background
          pnpm --filter web start > web.log 2>&1 &
          echo "Web started, logs -> web.log"
          sleep 1

      - name: Start issuer (background)
        working-directory: issuer
        env:
          NODE_ENV: production
          PORT: 4000
        run: |
          # Start issuer service in background. Adjust this if your issuer start command differs.
          pnpm --filter issuer start > issuer.log 2>&1 &
          echo "Issuer started, logs -> issuer.log"
          sleep 1

      - name: Wait for services to be ready
        run: |
          # wait-on is convenient ‚Äî npx will fetch it transiently
          npx wait-on http://127.0.0.1:3000 && echo "frontend ready"
          npx wait-on http://127.0.0.1:4000 && echo "issuer ready"
        timeout-minutes: 5

      - name: Show service logs (sanity)
        if: failure()
        run: |
          echo "---- web.log ----"
          tail -n +1 web/web.log || true
          echo "---- issuer.log ----"
          tail -n +1 issuer/issuer.log || true

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright smoke test (happy path)
        env:
          FRONTEND_URL: http://127.0.0.1:3000
          ISSUER_URL: http://127.0.0.1:4000
        run: |
          npx playwright test tests/e2e/happy-path.spec.ts --reporter=list
        continue-on-error: false

      - name: Post preview comment to PR
        if: always()
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            üöÄ Preview (runner-hosted) for PR #${{ github.event.pull_request.number }}
            - Frontend (runner): http://127.0.0.1:3000
            - Issuer (runner): http://127.0.0.1:4000

            ‚ö†Ô∏è These endpoints are reachable from the workflow runner only.  
            If you need an externally-accessible preview URL, replace the "start" steps with a deployment step (Netlify/Vercel/Render or a k8s ephemeral namespace) and ensure the deploy step writes a `preview_url` to `$GITHUB_OUTPUT`.
